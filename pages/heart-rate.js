import { useEffect, useState } from 'react';
import Head from 'next/head';
import io from 'socket.io-client';
import styles from '../styles/heartRate.module.scss'
import { CircularProgressbarWithChildren, buildStyles   } from 'react-circular-progressbar';
import 'react-circular-progressbar/dist/styles.css';
import Image from 'next/image';
import hearBeat from '../public/heartbeat.gif'


export default function HeartRate() {
  const [bpm, setBpm] = useState(0);
  const [bpmDetectionComplete, setBpmDetectionComplete] = useState(false);
  const [finalBpm, setFinalBpm] = useState(0);
  const [bufferIndex, setBufferIndex] = useState(0);

  useEffect(() => {
    const socket = io('http://localhost:5000');

    // Listen for BPM updates from the WebSocket server
    socket.on('bpm_update', ({ bpm, bufferIndex }) => {
      setBpm(bpm);
      setBufferIndex(bufferIndex); // Update bufferIndex state
    });

    // Listen for BPM detection completion status
    socket.on('bpm_detection_complete', ({ complete, bpm }) => {
      setBpmDetectionComplete(complete);
      if (complete) {
        setFinalBpm(bpm);
      }
    });

    return () => {
      socket.disconnect();
    };
  }, []);

  return (
    <>
      <Head>
        <title>Medical Consultation</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/icon.ico" />
      </Head>
      <div className={styles.mainContainer}>

        {/* {bpmDetectionComplete ? <p>Final BPM: {finalBpm}</p> : null}
        <p>Buffer Index: {bufferIndex}</p> */}
        
        <div className={styles.showCard}>
        <div className={styles.videoContainer}>
          <iframe className={styles.faceVideo} src="http://127.0.0.1:5000/face_detection" width="600" height="500" frameBorder="0"></iframe>
          <iframe className={styles.bpmVideo} src="http://127.0.0.1:5000/bpm_detection" width="320" height="240" frameBorder="0"></iframe>
        </div>

        <div className={styles.bpmCounter}>
          <CircularProgressbarWithChildren className={styles.progressBar} value={bufferIndex}
            styles={buildStyles({
              strokeLinecap: 'butt',
              pathTransitionDuration: 0.1,
              transition: 'stroke-dashoffset 0.5s ease 0s',
              transform: 'rotate(0.25turn)',
              transformOrigin: 'center center',
              pathColor: `rgba(222, 0, 56, ${bufferIndex / 100})`,
              trailColor: '#ffebeb',
            })}
          >    
            <Image src={hearBeat} alt='Heart Beat'/>
            <span>{bpm}</span>
          </CircularProgressbarWithChildren >
        </div>
        </div>
      </div>
    </>
  );
}
